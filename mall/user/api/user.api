type (
	User {
		Id       int64  `json:"id"`
		Username string `json:"username"`
		Gender   string `json:"gender"`
		Password string `json:"password"`
	}

	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginReply {
		Id       int64  `json:"id"`
		Username string `json:"username"`
		Gender   string `json:"gender"`
		// 下面三个为jwt鉴权需要用到
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}

	UserAddReq {
		Username string `json:"username"`
		Password string `json:"password"`
		Gender   string `json:"gender"`
	}
	UserAddRes {
		Id   int64  `json:"id"`
		Name string `json:"name"`
	}
	UserDelReq {
		Id int64 `json:"id"`
	}
	UserDelRes {
		Id       int64  `json:"id"`
		Username string `json:"username"`
	}
	UserEditReq {
		Id       int64  `json:"id"`
		Username string `json:"username"`
		Password string `json:"password"`
		Gender   string `json:"gender"`
	}
	UserEditRes {
		Id       int64  `json:"id"`
		Username string `json:"username"`
	}
	UserQueryReq {
		Username string `json:"username"`
	}
	UserQueryRes {
		UserList []*User `json:"products"`
	}
)

service user-api {
	@handler login
	post /user/login (LoginReq) returns (LoginReply)
	@handler UserAdd
	post /user/UserAdd (UserAddReq) returns (UserAddRes)
	@handler UserDel
	post /user/UserDel (UserDelReq) returns (UserDelRes)
	@handler UserQuery
	get /user/UserQuery (UserQueryReq) returns (UserQueryRes)
	@handler UserEdit
	post /user/UserEdit (UserEditReq) returns (UserEditRes)
}